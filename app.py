# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M9KEPyLQ2zDThiBgNpd-siZfiLp1jYUj
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib
from sklearn.preprocessing import RobustScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression

# -------------------------------
# Load model
# -------------------------------
model = joblib.load("model_fuel.pkl")  # Pastikan file ini ada di folder yang sama

# -------------------------------
# Definisi ulang preprocessing (tanpa pkl)
# -------------------------------
# Fitur numerik dan kategorik sesuai training
num_features = ['year', 'engine_cylinders', 'engine_displacement']
cat_features = ['fuel_type', 'vehicle_class']

# Pipeline numerik dan kategorik
num_pipeline = Pipeline([
    ('scaler', RobustScaler())
])

cat_pipeline = Pipeline([
    ('onehot', OneHotEncoder(handle_unknown='ignore', sparse_output=False))
])

# Gabungkan
preprocessor = ColumnTransformer([
    ('num', num_pipeline, num_features),
    ('cat', cat_pipeline, cat_features)
])

# -------------------------------
# Streamlit UI
# -------------------------------
st.title("üöó Prediksi Biaya Bahan Bakar Tahunan di Indonesia üáÆüá©")

st.write("Masukkan spesifikasi kendaraan kamu, lalu tekan prediksi!")

# Input pengguna
year = st.number_input("Tahun Kendaraan", min_value=1980, max_value=2025, value=2015)
engine_cylinders = st.selectbox("Jumlah Silinder Mesin", options=[2, 3, 4, 5, 6, 8], index=2)
engine_displacement = st.number_input("Kapasitas Mesin (Liter)", min_value=0.5, max_value=10.0, value=2.0, step=0.1)
fuel_type = st.selectbox("Jenis Bahan Bakar", options=["Regular", "Premium", "Diesel", "Electricity"])
vehicle_class = st.selectbox("Kelas Kendaraan", options=["Compact", "SUV", "Sedan", "Pickup", "Minivan"])

# Buat DataFrame input
input_df = pd.DataFrame({
    "year": [year],
    "engine_cylinders": [engine_cylinders],
    "engine_displacement": [engine_displacement],
    "fuel_type": [fuel_type],
    "vehicle_class": [vehicle_class]
})

# -------------------------------
# Prediksi
# -------------------------------
if st.button("üîç Prediksi"):
    try:
        # Preprocess
        input_transformed = preprocessor.fit_transform(input_df)

        # Prediksi
        pred = model.predict(input_transformed)[0]
        st.success(f"üí∞ Estimasi Biaya BBM Tahunan: **Rp {pred:,.0f}**")
    except Exception as e:
        st.error(f"Terjadi kesalahan saat prediksi: {e}")