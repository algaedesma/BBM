from sklearn.base import BaseEstimator, TransformerMixin

class Winsorizer(BaseEstimator, TransformerMixin):
    def __init__(self, lower=0.01, upper=0.99):
        self.lower = lower
        self.upper = upper

    def fit(self, X, y=None):
        # Harus DataFrame, karena .quantile() hanya ada di pandas
        import pandas as pd
        if not isinstance(X, pd.DataFrame):
            X = pd.DataFrame(X)
        self.lower_bounds_ = X.quantile(self.lower)
        self.upper_bounds_ = X.quantile(self.upper)
        return self

    def transform(self, X):
        import pandas as pd
        if not isinstance(X, pd.DataFrame):
            X = pd.DataFrame(X)
        return X.clip(self.lower_bounds_, self.upper_bounds_, axis=1)


# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M9KEPyLQ2zDThiBgNpd-siZfiLp1jYUj
"""

import streamlit as st
import pandas as pd
import joblib

# Load model dan preprocessor
model = joblib.load("model_fuel.pkl")
preprocessor = joblib.load("preprocessor.pkl")

st.title("ðŸš˜ Prediksi Biaya Bahan Bakar Tahunan di Indonesia ðŸ‡®ðŸ‡©")
st.write("Masukkan data kendaraan untuk memprediksi estimasi biaya bahan bakar tahunan.")

# Input pengguna (fitur yang sesuai dengan model)
year = st.number_input("Tahun Kendaraan", min_value=1980, max_value=2025, value=2015)
engine_cylinders = st.selectbox("Jumlah Silinder Mesin", options=[2, 3, 4, 5, 6, 8])
engine_displacement = st.number_input("Kapasitas Mesin (Liter)", min_value=0.0, max_value=10.0, value=2.0, step=0.1)
fuel_type = st.selectbox("Jenis Bahan Bakar", options=["Regular", "Premium", "Diesel", "Electricity"])
vehicle_class = st.selectbox("Kelas Kendaraan", options=["Compact", "SUV", "Sedan", "Pickup", "Minivan"])

# Buat DataFrame input
user_input = pd.DataFrame({
    "year": [year],
    "engine_cylinders": [engine_cylinders],
    "engine_displacement": [engine_displacement],
    "fuel_type": [fuel_type],
    "vehicle_class": [vehicle_class]
})

# Proses prediksi
if st.button("Prediksi Biaya Bahan Bakar"):
    try:
        X_input = preprocessor.transform(user_input)
        prediction = model.predict(X_input)[0]
        st.success(f"ðŸ’¸ Estimasi Biaya Bahan Bakar Tahunan: **Rp {prediction:,.0f}**")
    except Exception as e:
        st.error(f"Terjadi error saat prediksi: {e}")
